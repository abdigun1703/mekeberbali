---

import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import BlogCard from '../../../components/BlogCard.astro';

// 1. Ambil parameter dan normalisasi
const { category: categorySlug } = Astro.params as { category: string };

// Konversi slug kembali ke bentuk kategori (ui-web-development -> UI Web Development)
const categoryName = categorySlug
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

// 2. Ambil semua post yang tidak draft
const allPosts = await getCollection('blog', ({ data }) => {
  return !data.draft;
});

// 3. Filter post berdasarkan kategori (case insensitive dan support multi-word)
const postsInCategory = allPosts.filter(post => {
  return post.data.categories?.some(cat => {
    // Bandingkan dengan dua format:
    // 1. Format asli kategori (UI Web Development)
    // 2. Format slug (ui-web-development)
    const categorySlugForm = cat.toLowerCase().replace(/\s+/g, '-');
    return (
      cat.toLowerCase() === categoryName.toLowerCase() ||
      categorySlugForm === categorySlug.toLowerCase()
    );
  });
}).sort((a, b) => 
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

// 4. Redirect ke 404 jika tidak ada post
if (postsInCategory.length === 0) {
  return Astro.redirect('/404');
}

// 5. Format nama untuk tampilan
const displayName = categoryName;
---

<Layout 
  title=`Category ${displayName} | Play Astro`
  description=`Semua artikel tentang kategory ${displayName}`
>
  <section class="py-12 mt-20">
    <div class="container mx-auto px-4">
      <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-8">
        Posts in <span class="text-primary capitalize">{displayName}</span>
      </h1>
      
      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {postsInCategory.map(post => (
          <BlogCard post={post} />
        ))}
      </div>
    </div>
  </section>
</Layout>