---
// src/components/MainMenu.astro
interface MenuItem {
  title: string;
  path: string;
  children?: MenuItem[];
}

interface Props {
  menuitems: MenuItem[];
  homePage: boolean;
}

const { menuitems, homePage } = Astro.props;
---


        <div>
          <button
            id="navbarToggler"
            class="absolute right-4 top-1/2 block -translate-y-1/2 border-2 border-gray-800 rounded-lg px-3 py-[6px] ring-primary lg:hidden"
          >
            <span
              class="relative my-[6px] block h-[2px] w-[30px] bg-gray-800 dark:bg-white"
            ></span>
            <span
              class="relative my-[6px] block h-[2px] w-[30px] bg-gray-800 dark:bg-white"
            ></span>
            <span
              class="relative my-[6px] block h-[2px] w-[30px] bg-gray-800 dark:bg-white"
            ></span>
          </button>
          <nav
            id="navbarCollapse"
            class="absolute right-4 top-full hidden w-[90%] mx-auto max-w-[380px] rounded-lg bg-white dark:bg-gray-800 py-5 shadow-lg lg:static lg:block lg:w-full lg:max-w-full lg:bg-transparent dark:lg:bg-transparent lg:py-0 xl:px-4 lg:shadow-none 2xl:px-6"
          >
            <ul class="block lg:flex xl:ml-5">
              {
                menuitems.map((item, index) => {
                  if(!item.children) {
                    return (
                      <li class="group relative">
                        <a
                          href={item.path}
                          class={` ${index}
                          ${homePage ? 'ud-menu-scroll mx-8 flex py-2 font-medium text-base text-dark dark:text-white group-hover:text-primary lg:mr-0 lg:ml-7 lg:inline-flex lg:py-6 lg:px-0 lg:text-white lg:group-hover:text-white lg:group-hover:opacity-70 xl:ml-10' : 'ud-menu-scroll mx-8 flex py-2 font-medium text-base text-dark dark:text-white group-hover:text-primary lg:mr-0 lg:ml-7 lg:inline-flex lg:py-6 lg:px-0 lg:text-body-color dark:lg:text-dark-6 xl:ml-10'}
                          `}>
                          {item.title}
                        </a>
                      </li>
                    )
                  }
                
                  if(item.children) {
                    return (
                      <li class="submenu-item group relative">
                        <a
                          href={item.path}
                          class={` ${index}
                          ${homePage ? 'relative mx-8 flex items-center justify-between py-2 font-medium text-base text-gray-800 dark:text-white group-hover:text-primary lg:mr-0 lg:ml-8 lg:inline-flex lg:py-6 lg:pl-0 lg:pr-4 lg:text-white lg:group-hover:text-white lg:group-hover:opacity-70 xl:ml-10' : 'relative mx-8 flex items-center justify-between py-2 font-medium text-base text-dark-800 dark:text-white group-hover:text-primary lg:mr-0 lg:ml-8 lg:inline-flex lg:py-6 lg:pl-0 lg:pr-4 xl:ml-10'}
                          `}>
                          {item.title}

                          <svg class="fill-current ml-2" width="16" height="20" viewBox="0 0 16 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                              d="M7.99999 14.9C7.84999 14.9 7.72499 14.85 7.59999 14.75L1.84999 9.10005C1.62499 8.87505 1.62499 8.52505 1.84999 8.30005C2.07499 8.07505 2.42499 8.07505 2.64999 8.30005L7.99999 13.525L13.35 8.25005C13.575 8.02505 13.925 8.02505 14.15 8.25005C14.375 8.47505 14.375 8.82505 14.15 9.05005L8.39999 14.7C8.27499 14.825 8.14999 14.9 7.99999 14.9Z" 
                            />
                          </svg>
                        </a>

                        <div
                          class="submenu relative top-full left-0 hidden w-[250px] rounded-sm bg-white dark:bg-dark-2 p-4 transition-[top] duration-300 group-hover:opacity-100 lg:invisible lg:absolute lg:top-[110%] lg:block lg:opacity-0 lg:shadow-lg lg:group-hover:visible lg:group-hover:top-full"
                        >
                          {
                            item.children.map(childItem => ( // Changed variable name to avoid conflict
                              <a
                                href={childItem.path}
                                class="block rounded py-[10px] px-4 text-sm text-body-color dark:text-dark-6 hover:text-primary dark:hover:text-primary"
                              >
                                {childItem.title}
                              </a>
                            ))
                          }
                        </div>
                      </li>
                    )
                  }
                })
              }
                <div class="ml-3 flex md:hidden">
                    <a href="#" class="bg-emerald-400 py-2 px-5 rounded-lg text-white text-sm">Hari Libur Nasional</a>
                </div>
            </ul>
          </nav>
        </div>